generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  firstName String
  lastName  String
  userName  String @unique
  password  String
  elo       Elo?
  games     Game[] @relation("UserGame")
  games2    Game[] @relation("UserGame2")
  allGames  Game[] @relation("AllUserGames")
}

model Game {
  id       Int                @id @default(autoincrement())
  status   VerificationStatus @default(PENDING)
  users    User[]             @relation("UserGame")
  users2   User[]             @relation("UserGame2")
  score1   Int?
  score2   Int?
  GameType GameType?
  userId   Int?
  User     User[]             @relation("AllUserGames", fields: [userId], references: [id])
  createdAt DateTime?
  endedAt DateTime?
  @@unique(fields: [GameType, id], name: "idGameType")
}

model Elo {
  id         Int          @id @default(autoincrement())
  Handball   Int?         @default(1200)
  Basketball Int?         @default(1200)
  Soccer     Int?         @default(1200)
  Tennis     Int?         @default(1200)
  Pingpong   Int?         @default(1200)
  user       User         @relation(fields: [username], references: [userName])
  username   String       @unique
  eloHistory EloHistory[]
}

model EloHistory {
  id       Int            @id @default(autoincrement())
  History  Elo       @relation(fields: [eloId], references: [id])
  eloId    Int
  eloHistory      Int
  GameType GameType?
}

enum GameType {
  HANDBALL
  BASKETBALL
  SOCCER
  TENNIS
  PINGPONG
}

enum VerificationStatus {
  PENDING
  STARTED
  COMPLETED
}
